/**
 * A basic math library.
 */
class Math {
    static int MAX_INT;
    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        let MAX_INT = 32767; // on a hack cpu

        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;
        let twoToThe[1] = 2;
        let twoToThe[2] = 4;
        let twoToThe[3] = 8;
        let twoToThe[4] = 16;
        let twoToThe[5] = 32;
        let twoToThe[6] = 64;
        let twoToThe[7] = 128;
        let twoToThe[8] = 256;
        let twoToThe[9] = 512;
        let twoToThe[10] = 1024;
        let twoToThe[11] = 2048;
        let twoToThe[12] = 4096;
        let twoToThe[13] = 8192;
        let twoToThe[14] = 16384;
        let twoToThe[15] = -16384;
        return;
    }

    /** Return true if the j-th bit of the integer x is 1 and false otherwise */
    function boolean bit(int x, int j) {
        if ((x & twoToThe[j]) > 0) {
            return true;
        } else {
            return false;
        }
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        }
        return x;
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
        var int sum, shiftedX, j;
        let sum = 0;
        let shiftedX = x;
        let j = 0;

        if (x = 1) {
            return y;
        }
        if (y = 1) {
            return x;
        }

        while (j < 15) { // hack word size (bits) - 1 (minus sign/MSB)
            if (Math.bit(y, j)) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX; // shiftedX * 2
            let j = j + 1;
        }

        return sum;
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
        var boolean neg;
        var int q, res;
        let neg = false;
        // division by zero
        if (y = 0) {
            do Sys.error(3);
        }
        // neg
        if ((x < 0) | (y < 0)) {
            let neg = true;
        }
        if ((x < 0) & (y < 0)) {
            let neg = false;
        }
        // operar nos valores positivos
        let y = Math.abs(y);
        let x = Math.abs(x);

        if (y > x) {
            return 0;
        }

        let q = Math.divide(x, y + y); // 2 * y

        if ((x - (2 * q * y)) < y) { // (x - 2 * q * y) < y
            let res = q + q; // 2 * q
            if (neg) {
                let res = -res;
            }
            return res;
        } else {
            return q + q + 1; // 2 * q + 1
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int y, j, r, rr;
        let y = 0;
        // let j = (16 / 2) - 1;
        let j = 7;

        while (j > -1) {
            let r = y + twoToThe[j];
            let rr = r * r;
            if (
                ((rr < x) | (rr = x)) & 
                (rr > 0)
            ) {
                let y = r;
            }
            let j = j - 1;
        }

        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b) {
            return a;
        } else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (b < a) {
            return b;
        } else {
            return a;
        }
    }
}
